apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion compile_version
    buildToolsVersion tools_version

    def buildType = gradle.startParameter.taskNames.any {
        it.toLowerCase().contains("debug")
    } ? "debug" : "release"

    def versionPropsFile = file('version.properties')
    Properties versionProps = new Properties()
    if (!versionPropsFile.exists()) {
        versionProps['VERSION_CODE'] = "5"
        versionProps.store(versionPropsFile.newWriter(), null)
    }
    versionProps.load(new FileInputStream(versionPropsFile))

    def code = versionProps['VERSION_CODE'].toInteger()
    if (buildType == "release") {
        code = code + 1
    }
    versionProps['VERSION_CODE'] = code.toString()
    versionProps.store(versionPropsFile.newWriter(), null)

    defaultConfig {
        applicationId 'hexlay.movyeah'
        minSdkVersion min_sdk_app
        targetSdkVersion target_sdk
        versionCode code
        versionName "${getDate('YY')}${getDate('M')}${getDate('D')}"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/atomicfu.kotlin_module'
        exclude 'META-INF/core.kotlin_module'
    }
    androidExtensions {
        experimental = true
    }
}

static def getDate(String format) {
    new Date().format(format)
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':api')
    // Kotlin
    implementation 'org.jetbrains.anko:anko:0.10.8'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Android KTX
    implementation 'androidx.core:core-ktx:1.4.0-alpha01'
    implementation 'androidx.fragment:fragment-ktx:1.2.4'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    // AndroidX
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta7'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.preference:preference:1.1.1'

    // Google
    implementation 'com.google.android.exoplayer:exoplayer:2.7.3'
    implementation 'com.google.android.material:material:1.2.0-alpha05'

    // Apache
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'

    // Other...
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    implementation 'com.afollestad:recyclical:1.1.1'
    implementation 'org.greenrobot:eventbus:3.2.0'
    implementation 'com.afollestad.material-dialogs:core:3.1.1'
    implementation 'com.afollestad.assent:core:3.0.0-RC4'
    implementation 'com.rezwan.knetworklib:knetworklib:1.0.3'
}
